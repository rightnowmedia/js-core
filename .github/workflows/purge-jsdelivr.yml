name: Purge jsDelivr cache
on:
  push:
    branches: [ "main" ]     # change if your deploy branch is different
  workflow_dispatch:         # lets you run it manually from the Actions tab

jobs:
  purge:
    runs-on: ubuntu-latest
    steps:
      - name: Define URLs to purge
        id: list
        run: |
          cat <<'EOF' > urls.txt
          https://cdn.jsdelivr.net/gh/rightnowmedia/js-core/rightnowpastors.js
          https://cdn.jsdelivr.net/gh/rightnowmedia/js-core/rightnowmedia.js
          https://cdn.jsdelivr.net/gh/rightnowmedia/js-core/rightnowmediaatwork.js
          https://cdn.jsdelivr.net/gh/rightnowmedia/js-core/rightnowmediaschools.js
          https://cdn.jsdelivr.net/gh/rightnowmedia/js-core/core/popups.js
          EOF
          echo "Files to purge:"
          cat urls.txt

      - name: Purge jsDelivr for each URL
        run: |
          set -euo pipefail
          while read -r URL; do
            PURGE_URL="${URL/cdn.jsdelivr.net/purge.jsdelivr.net}"
            echo "Purging: $PURGE_URL"
            RESP="$(curl -sS "$PURGE_URL")"
            echo "Response: $RESP"
          done < urls.txt

      - name: Verify CDN headers after purge
        run: |
          while read -r URL; do
            echo ""
            echo "HEAD $URL"
            # Show key headers that indicate cache behavior
            curl -sI "$URL" | grep -Ei '^(HTTP/|date:|etag:|last-modified:|cache-control:|cf-cache-status:|age:|x-cache:)'
          done < urls.txt

      - name: Show first 200 chars of each file (sanity check)
        run: |
          while read -r URL; do
            echo ""
            echo "GET $URL (first 200 chars)"
            curl -s "$URL" | head -c 200 || true
            echo -e "\n---"
          done < urls.txt
